{
	"openapi": "3.0.1",
	"info": {
		"title": "OpenAPI definition",
		"version": "v0"
	},
	"servers": [
		{
			"url": "http://localhost:8180",
			"description": "Generated server url"
		}
	],
	"paths": {
		"/v1/manufacturers/{manufacturer}/models/{name}/{year}": {
			"get": {
				"tags": [
					"model-controller"
				],
				"summary": "getByManufacturerAndNameAndYear",
				"operationId": "getByManufacturerAndNameAndYear",
				"parameters": [
					{
						"name": "manufacturer",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "year",
						"in": "path",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					}
				],
				"responses": {
					"405": {
						"description": "Method Not Allowed",
						"content": {
							"*/*": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"*/*": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"404": {
						"description": "Not Found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"200": {
						"description": "Ok",
						"content": {
							"*/*": {
								"schema": {
									"$ref": "#/components/schemas/ModelDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"OAuth2": []
					}
				]
			},
			"put": {
				"tags": [
					"model-controller"
				],
				"summary": "update",
				"operationId": "update",
				"parameters": [
					{
						"name": "manufacturer",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "year",
						"in": "path",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ModelDto"
							}
						}
					},
					"required": true
				},
				"responses": {
					"405": {
						"description": "Method Not Allowed",
						"content": {
							"*/*": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"*/*": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"404": {
						"description": "Not Found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"200": {
						"description": "Ok"
					}
				},
				"security": [
					{
						"OAuth2": []
					}
				]
			},
			"post": {
				"tags": [
					"model-controller"
				],
				"summary": "save",
				"operationId": "save_2",
				"parameters": [
					{
						"name": "manufacturer",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "year",
						"in": "path",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int32"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ModelDto"
							}
						}
					},
					"required": true
				},
				"responses": {
					"405": {
						"description": "Method Not Allowed",
						"content": {
							"*/*": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"*/*": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"404": {
						"description": "Not Found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"201": {
						"description": "Created",
						"headers": {
							"Location": {
								"description": "/v1/models/{id}",
								"style": "simple"
							}
						}
					},
					"409": {
						"description": "Conflict",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"security": [
					{
						"OAuth2": []
					}
				]
			}
		},
		"/v1/model-names": {
			"get": {
				"tags": [
					"model-name-controller"
				],
				"summary": "getAll",
				"operationId": "getAll",
				"parameters": [
					{
						"name": "page",
						"in": "query",
						"description": "Zero-based page index (0..N)",
						"required": false,
						"schema": {
							"minimum": 0,
							"type": "integer",
							"default": 0
						}
					},
					{
						"name": "size",
						"in": "query",
						"description": "The size of the page to be returned",
						"required": false,
						"schema": {
							"minimum": 1,
							"type": "integer",
							"default": 100
						}
					},
					{
						"name": "sort",
						"in": "query",
						"description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
						"required": false,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					}
				],
				"responses": {
					"405": {
						"description": "Method Not Allowed",
						"content": {
							"*/*": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"*/*": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"200": {
						"description": "OK",
						"content": {
							"*/*": {
								"schema": {
									"$ref": "#/components/schemas/PageModelNameDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"OAuth2": []
					}
				]
			},
			"post": {
				"tags": [
					"model-name-controller"
				],
				"summary": "save",
				"operationId": "save",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ModelNameDto"
							}
						}
					},
					"required": true
				},
				"responses": {
					"405": {
						"description": "Method Not Allowed",
						"content": {
							"*/*": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"*/*": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"201": {
						"description": "Created",
						"headers": {
							"Location": {
								"description": "/v1/names/{name}",
								"style": "simple"
							}
						}
					},
					"409": {
						"description": "Conflict",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"security": [
					{
						"OAuth2": []
					}
				]
			}
		},
		"/v1/manufacturers": {
			"get": {
				"tags": [
					"manufacturer-controller"
				],
				"summary": "getAll",
				"operationId": "getAll_1",
				"parameters": [
					{
						"name": "page",
						"in": "query",
						"description": "Zero-based page index (0..N)",
						"required": false,
						"schema": {
							"minimum": 0,
							"type": "integer",
							"default": 0
						}
					},
					{
						"name": "size",
						"in": "query",
						"description": "The size of the page to be returned",
						"required": false,
						"schema": {
							"minimum": 1,
							"type": "integer",
							"default": 100
						}
					},
					{
						"name": "sort",
						"in": "query",
						"description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
						"required": false,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					}
				],
				"responses": {
					"405": {
						"description": "Method Not Allowed",
						"content": {
							"*/*": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"*/*": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"200": {
						"description": "OK",
						"content": {
							"*/*": {
								"schema": {
									"$ref": "#/components/schemas/PageManufacturerDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"OAuth2": []
					}
				]
			},
			"post": {
				"tags": [
					"manufacturer-controller"
				],
				"summary": "save",
				"operationId": "save_1",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ManufacturerDto"
							}
						}
					},
					"required": true
				},
				"responses": {
					"405": {
						"description": "Method Not Allowed",
						"content": {
							"*/*": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"*/*": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"201": {
						"description": "Created",
						"headers": {
							"Location": {
								"description": "/v1/manufacturers/{name}",
								"style": "simple"
							}
						}
					},
					"409": {
						"description": "Conflict",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"security": [
					{
						"OAuth2": []
					}
				]
			}
		},
		"/v1/categories": {
			"get": {
				"tags": [
					"category-controller"
				],
				"summary": "getAll",
				"operationId": "getAll_2",
				"parameters": [
					{
						"name": "page",
						"in": "query",
						"description": "Zero-based page index (0..N)",
						"required": false,
						"schema": {
							"minimum": 0,
							"type": "integer",
							"default": 0
						}
					},
					{
						"name": "size",
						"in": "query",
						"description": "The size of the page to be returned",
						"required": false,
						"schema": {
							"minimum": 1,
							"type": "integer",
							"default": 100
						}
					},
					{
						"name": "sort",
						"in": "query",
						"description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
						"required": false,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					}
				],
				"responses": {
					"405": {
						"description": "Method Not Allowed",
						"content": {
							"*/*": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"*/*": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"200": {
						"description": "OK",
						"content": {
							"*/*": {
								"schema": {
									"$ref": "#/components/schemas/PageCategoryDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"OAuth2": []
					}
				]
			},
			"post": {
				"tags": [
					"category-controller"
				],
				"summary": "save",
				"operationId": "save_3",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CategoryDto"
							}
						}
					},
					"required": true
				},
				"responses": {
					"405": {
						"description": "Method Not Allowed",
						"content": {
							"*/*": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"*/*": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"201": {
						"description": "Created",
						"headers": {
							"Location": {
								"description": "/v1/categories/{name}",
								"style": "simple"
							}
						}
					},
					"409": {
						"description": "Conflict",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					}
				},
				"security": [
					{
						"OAuth2": []
					}
				]
			}
		},
		"/v1/models": {
			"get": {
				"tags": [
					"model-controller"
				],
				"summary": "search",
				"operationId": "search",
				"parameters": [
					{
						"name": "searchFilter",
						"in": "query",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/SearchFilter"
						}
					},
					{
						"name": "page",
						"in": "query",
						"description": "Zero-based page index (0..N)",
						"required": false,
						"schema": {
							"minimum": 0,
							"type": "integer",
							"default": 0
						}
					},
					{
						"name": "size",
						"in": "query",
						"description": "The size of the page to be returned",
						"required": false,
						"schema": {
							"minimum": 1,
							"type": "integer",
							"default": 100
						}
					},
					{
						"name": "sort",
						"in": "query",
						"description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
						"required": false,
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					}
				],
				"responses": {
					"405": {
						"description": "Method Not Allowed",
						"content": {
							"*/*": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"*/*": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"200": {
						"description": "OK",
						"content": {
							"*/*": {
								"schema": {
									"$ref": "#/components/schemas/PageModelDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"OAuth2": []
					}
				]
			}
		},
		"/v1/models/{id}": {
			"get": {
				"tags": [
					"model-controller"
				],
				"summary": "getById",
				"operationId": "getById",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"405": {
						"description": "Method Not Allowed",
						"content": {
							"*/*": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"*/*": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"404": {
						"description": "Not Found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"200": {
						"description": "Ok",
						"content": {
							"*/*": {
								"schema": {
									"$ref": "#/components/schemas/ModelDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"OAuth2": []
					}
				]
			},
			"delete": {
				"tags": [
					"model-controller"
				],
				"summary": "deleteById",
				"operationId": "deleteById",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"405": {
						"description": "Method Not Allowed",
						"content": {
							"*/*": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"*/*": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"404": {
						"description": "Not Found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"204": {
						"description": "No Content"
					}
				},
				"security": [
					{
						"OAuth2": []
					}
				]
			}
		},
		"/v1/model-names/{name}": {
			"get": {
				"tags": [
					"model-name-controller"
				],
				"summary": "getByName",
				"operationId": "getByName",
				"parameters": [
					{
						"name": "name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"405": {
						"description": "Method Not Allowed",
						"content": {
							"*/*": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"*/*": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"404": {
						"description": "Not Found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"200": {
						"description": "Ok",
						"content": {
							"*/*": {
								"schema": {
									"$ref": "#/components/schemas/ModelNameDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"OAuth2": []
					}
				]
			},
			"delete": {
				"tags": [
					"model-name-controller"
				],
				"summary": "deleteByName",
				"operationId": "deleteByName",
				"parameters": [
					{
						"name": "name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"405": {
						"description": "Method Not Allowed",
						"content": {
							"*/*": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"*/*": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"404": {
						"description": "Not Found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"204": {
						"description": "No Content"
					}
				},
				"security": [
					{
						"OAuth2": []
					}
				]
			}
		},
		"/v1/manufacturers/{name}": {
			"get": {
				"tags": [
					"manufacturer-controller"
				],
				"summary": "getByName",
				"operationId": "getByName_1",
				"parameters": [
					{
						"name": "name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"405": {
						"description": "Method Not Allowed",
						"content": {
							"*/*": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"*/*": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"404": {
						"description": "Not Found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"200": {
						"description": "Ok",
						"content": {
							"*/*": {
								"schema": {
									"$ref": "#/components/schemas/ManufacturerDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"OAuth2": []
					}
				]
			},
			"delete": {
				"tags": [
					"manufacturer-controller"
				],
				"summary": "deleteByName",
				"operationId": "deleteByName_1",
				"parameters": [
					{
						"name": "name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"405": {
						"description": "Method Not Allowed",
						"content": {
							"*/*": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"*/*": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"404": {
						"description": "Not Found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"204": {
						"description": "No Content"
					}
				},
				"security": [
					{
						"OAuth2": []
					}
				]
			}
		},
		"/v1/categories/{name}": {
			"get": {
				"tags": [
					"category-controller"
				],
				"summary": "getByName",
				"operationId": "getByName_2",
				"parameters": [
					{
						"name": "name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"405": {
						"description": "Method Not Allowed",
						"content": {
							"*/*": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"*/*": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"404": {
						"description": "Not Found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"200": {
						"description": "Ok",
						"content": {
							"*/*": {
								"schema": {
									"$ref": "#/components/schemas/CategoryDto"
								}
							}
						}
					}
				},
				"security": [
					{
						"OAuth2": []
					}
				]
			},
			"delete": {
				"tags": [
					"category-controller"
				],
				"summary": "deleteByName",
				"operationId": "deleteByName_2",
				"parameters": [
					{
						"name": "name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"405": {
						"description": "Method Not Allowed",
						"content": {
							"*/*": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"*/*": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"404": {
						"description": "Not Found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse"
								}
							}
						}
					},
					"204": {
						"description": "No Content"
					}
				},
				"security": [
					{
						"OAuth2": []
					}
				]
			}
		}
	},
	"components": {
		"schemas": {
			"ErrorResponse": {
				"type": "object",
				"properties": {
					"timestamp": {
						"type": "string",
						"format": "date-time"
					},
					"status": {
						"type": "integer",
						"format": "int32"
					},
					"error": {
						"type": "string"
					},
					"message": {
						"type": "string"
					},
					"path": {
						"type": "string"
					},
					"violations": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/Violation"
						}
					}
				}
			},
			"Violation": {
				"type": "object",
				"properties": {
					"attribute": {
						"type": "string"
					},
					"message": {
						"type": "string"
					}
				}
			},
			"ModelDto": {
				"required": [
					"categories"
				],
				"type": "object",
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"year": {
						"type": "integer",
						"format": "int32"
					},
					"manufacturer": {
						"type": "string"
					},
					"categories": {
						"uniqueItems": true,
						"type": "array",
						"items": {
							"type": "string"
						}
					}
				}
			},
			"ModelNameDto": {
				"required": [
					"name"
				],
				"type": "object",
				"properties": {
					"name": {
						"type": "string"
					}
				}
			},
			"ManufacturerDto": {
				"required": [
					"name"
				],
				"type": "object",
				"properties": {
					"name": {
						"type": "string"
					}
				}
			},
			"CategoryDto": {
				"required": [
					"name"
				],
				"type": "object",
				"properties": {
					"name": {
						"type": "string"
					}
				}
			},
			"SearchFilter": {
				"type": "object",
				"properties": {
					"model": {
						"type": "string"
					},
					"category": {
						"type": "string"
					},
					"manufacturer": {
						"type": "string"
					},
					"maxYear": {
						"type": "integer",
						"format": "int32"
					},
					"minYear": {
						"type": "integer",
						"format": "int32"
					},
					"year": {
						"type": "integer",
						"format": "int32"
					}
				}
			},
			"PageModelDto": {
				"type": "object",
				"properties": {
					"totalPages": {
						"type": "integer",
						"format": "int32"
					},
					"totalElements": {
						"type": "integer",
						"format": "int64"
					},
					"pageable": {
						"$ref": "#/components/schemas/PageableObject"
					},
					"first": {
						"type": "boolean"
					},
					"last": {
						"type": "boolean"
					},
					"number": {
						"type": "integer",
						"format": "int32"
					},
					"sort": {
						"$ref": "#/components/schemas/SortObject"
					},
					"numberOfElements": {
						"type": "integer",
						"format": "int32"
					},
					"size": {
						"type": "integer",
						"format": "int32"
					},
					"content": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ModelDto"
						}
					},
					"empty": {
						"type": "boolean"
					}
				}
			},
			"PageableObject": {
				"type": "object",
				"properties": {
					"pageNumber": {
						"type": "integer",
						"format": "int32"
					},
					"pageSize": {
						"type": "integer",
						"format": "int32"
					},
					"sort": {
						"$ref": "#/components/schemas/SortObject"
					},
					"paged": {
						"type": "boolean"
					},
					"unpaged": {
						"type": "boolean"
					},
					"offset": {
						"type": "integer",
						"format": "int64"
					}
				}
			},
			"SortObject": {
				"type": "object",
				"properties": {
					"sorted": {
						"type": "boolean"
					},
					"unsorted": {
						"type": "boolean"
					},
					"empty": {
						"type": "boolean"
					}
				}
			},
			"PageModelNameDto": {
				"type": "object",
				"properties": {
					"totalPages": {
						"type": "integer",
						"format": "int32"
					},
					"totalElements": {
						"type": "integer",
						"format": "int64"
					},
					"pageable": {
						"$ref": "#/components/schemas/PageableObject"
					},
					"first": {
						"type": "boolean"
					},
					"last": {
						"type": "boolean"
					},
					"number": {
						"type": "integer",
						"format": "int32"
					},
					"sort": {
						"$ref": "#/components/schemas/SortObject"
					},
					"numberOfElements": {
						"type": "integer",
						"format": "int32"
					},
					"size": {
						"type": "integer",
						"format": "int32"
					},
					"content": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ModelNameDto"
						}
					},
					"empty": {
						"type": "boolean"
					}
				}
			},
			"PageManufacturerDto": {
				"type": "object",
				"properties": {
					"totalPages": {
						"type": "integer",
						"format": "int32"
					},
					"totalElements": {
						"type": "integer",
						"format": "int64"
					},
					"pageable": {
						"$ref": "#/components/schemas/PageableObject"
					},
					"first": {
						"type": "boolean"
					},
					"last": {
						"type": "boolean"
					},
					"number": {
						"type": "integer",
						"format": "int32"
					},
					"sort": {
						"$ref": "#/components/schemas/SortObject"
					},
					"numberOfElements": {
						"type": "integer",
						"format": "int32"
					},
					"size": {
						"type": "integer",
						"format": "int32"
					},
					"content": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ManufacturerDto"
						}
					},
					"empty": {
						"type": "boolean"
					}
				}
			},
			"PageCategoryDto": {
				"type": "object",
				"properties": {
					"totalPages": {
						"type": "integer",
						"format": "int32"
					},
					"totalElements": {
						"type": "integer",
						"format": "int64"
					},
					"pageable": {
						"$ref": "#/components/schemas/PageableObject"
					},
					"first": {
						"type": "boolean"
					},
					"last": {
						"type": "boolean"
					},
					"number": {
						"type": "integer",
						"format": "int32"
					},
					"sort": {
						"$ref": "#/components/schemas/SortObject"
					},
					"numberOfElements": {
						"type": "integer",
						"format": "int32"
					},
					"size": {
						"type": "integer",
						"format": "int32"
					},
					"content": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/CategoryDto"
						}
					},
					"empty": {
						"type": "boolean"
					}
				}
			}
		},
		"securitySchemes": {
			"OAuth2": {
				"type": "oauth2",
				"flows": {
					"authorizationCode": {
						"authorizationUrl": "http://localhost:8080/auth/realms/car-services/protocol/openid-connect/auth",
						"tokenUrl": "http://localhost:8080/auth/realms/car-services/protocol/openid-connect/token",
						"scopes": {
							"POST": "Defined by the keycloak policy enforcer setting when using the method POST",
							"GET": "Defined by the keycloak policy enforcer setting when using the method GET",
							"PUT": "Defined by the keycloak policy enforcer setting when using the method PUT",
							"DELETE": "Defined by the keycloak policy enforcer setting when using the method DELETE"
						}
					}
				}
			}
		}
	}
}